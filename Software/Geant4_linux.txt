0) Install geant4 according to instructions with cmake
1) Even when building apps with CMake
source /home/frolov/Software/Geant4/geant4.10.04.p01-install/bin/geant4.sh
is required on startup:
"During the installation of your library and executable, the runtime paths to find the library are stripped from the executable. Therefore your library has to reside in the runtime library search path. For example under Linux, try to set LD_LIBRARY_PATH to the directory that contains the installed library when starting your executable."

cmake -DCMAKE_INSTALL_PREFIX=../geant4-v11.0.0-install -DGEANT4_INSTALL_DATA=ON -DGEANT4_USE_SYSTEM_EXPAT=OFF ../geant4-v11.0.0/

================================================================================================================
# Geant4 for clean WSL ubuntu 22:
sudo apt update && sudo apt upgrade
# Some are for geant4, some are generally useful
sudo apt-get install build-essential xwayland xauth gedit openssl libssl-dev libssl1.0 libgl1-mesa-dev qtbase5-dev qtdeclarative5-dev qt5-qmake libqt5x11extras5 mesa-common-dev libglu1-mesa-dev gifsicle smartmontools gifsicle gnome-terminal git cmake python3-pip freeglut3-dev mesa-utils nautilus gdb -y
# For gnome terminal set locales and then reboot
sudo localectl set-locale LANG="en_US.UTF-8"
# Fixing graphics bugs: https://www.reddit.com/r/bashonubuntuonwindows/comments/18fkhn8/weird_graphical_glitchproblem_in_ubuntu_wslg/
sudo add-apt-repository ppa:oibaf/graphics-drivers
sudo apt update && sudo apt upgrade
# Updating mesa drivers to lastest version:
sudo add-apt-repository ppa:kisak/kisak-mesa
sudo apt update && sudo apt upgrade
# Installing VScode via apt-get is too long a procedure.
sudo snap install --classic code
# Geant4 dependencies
sudo apt-get install libxmu-dev libcurl4-openssl-dev -y
# Xerces for Geant4 must be built from source, see Geant4 isntallation guide
# Launching WSL with gnome terminal by default: https://www.reddit.com/r/bashonubuntuonwindows/comments/51f7ni/how_to_run_gnome_terminal_on_wsl/?rdt=65467
wsl ~ -e sh -c "DISPLAY=:0 gnome-terminal" && exit
# Default WSL had strange GUI bugs. Also launching gnome-terminal from wsl was inconsistent.
# GUI bugs were fixed by exucting
wsl --shutdown
wsl --update
wsl --update --pre-release
# in powershell. It is also possible that updating GPU drivers will be useful.
# Inconsistency in WSL was because ubuntu session is not persistent and is closed (at arbitrary times)
# after wsl command is executed. To fix it, handing WSL command is executed by calling bash command that waits for
# user input indifinately. To help with WSL, I created several helper .bat scripts that are to be pinned to taskbar,
# see Scripts/WSL/

# /etc/profile.d/ additional scripts:
source /home/user/Software/geant4-v11.2.0-install/bin/geant4.sh
source /home/user/Software/geant4-v11.2.0-install/share/Geant4/geant4make/geant4make.sh

export DONT_PROMPT_WSL_INSTALL=True
export PATH=$PATH:/snap/bin:/home/frolov/.local/bin

================================================================================================================
Automatic instructions with Qt visialization
================================================================================================================
sudo apt-get update
sudo apt-get install build-essential gfortran libssl-dev openssl libssl1.0 qtbase5-dev qtdeclarative5-dev qt5-qmake libqt5x11extras5 mesa-common-dev libglu1-mesa-dev mesa-utils openssh-client libgl1-mesa-dev freeglut3-dev libxmu-dev libcurl4-openssl-dev curl git cmake python3-pip smartmontools  -y
sudo snap install --classic code

mkdir -p ~/Software && cd ~/Software
curl -O -L https://dlcdn.apache.org//xerces/c/3/sources/xerces-c-3.2.5.tar.gz
tar -xf xerces-c-3.2.5.tar.gz
cd xerces-c-3.2.5
mkdir -p build && cd build
cmake -Dnetwork-accessor=curl ../
sudo make install -j6

mkdir -p ~/Software/Geant4 && cd "$_"
curl -O -L https://gitlab.cern.ch/geant4/geant4/-/archive/v11.2.1/geant4-v11.2.1.tar.gz
tar -xf geant4-v11.2.1.tar.gz
mkdir -p geant4-v11.2.1-build && cd geant4-v11.2.1-build
cmake -DCMAKE_INSTALL_PREFIX=../geant4-v11.2.1-install -DGEANT4_INSTALL_DATA=ON -DGEANT4_INSTALL_DATA_TIMEOUT=6000 -DGEANT4_USE_GDML=ON -DGEANT4_USE_QT=ON -DGEANT4_USE_SYSTEM_EXPAT=OFF ../geant4-v11.2.1/
make install -j6

================================================================================================================
For cluster computations use
================================================================================================================
mkdir -p geant4-v11.2.0-build-cluster && cd geant4-v11.2.0-build-cluster
cmake -DCMAKE_INSTALL_PREFIX=../geant4-v11.2.0-install-cluster -DGEANT4_INSTALL_DATA=OFF -DGEANT4_INSTALL_DATADIR=${HOME}/Software/Geant4/geant4-v11.2.0-install/share/Geant4/data -DGEANT4_USE_GDML=ON -DGEANT4_USE_QT=OFF -DGEANT4_USE_SYSTEM_EXPAT=OFF -DBUILD_STATIC_LIBS=ON -DGEANT4_BUILD_STORE_TRAJECTORY=OFF ../geant4-v11.2.0/
make install -j6

