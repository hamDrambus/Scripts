-------- window width ------- ------------- ----------- --------- ---------- ------- --------- --------- window width: ------|

 1) Ubuntu 15.10 GUI copy bug: coping form shared directory (owned by root, I gather this is the issue for any not user ownned
directory, but haven't checked) to some directory will fail if files with such names had been already copied to the target
location, even if they were later removed! Instead of coping of new files old ones are either stay or restored. This was on
Oracle Virtual Box machine. Use terminal's >cp $from_file $to_file instead.

 2) Virtual Box can change the number of precessors without worry in between guest OS launch.

 3) makefile example with several files is present in GarfieldPP_transparency/reproducing_Sauli/CellTest dir.

 4) mouting shared folder:
Install virtual drive drivers: VBox's menu (left Ctrl+Home by default): Devices->Insert Guest Additions CD Image
then auto installation will run

	>sudo -i //enter root
	>password entering
	>mount -t vboxsf $HostFolderNameInVirtualBox $where to mount (must exist - not created)
change of owner (does not seem to work):
	>chown $USER -R $path_to_folder //$USER is a real env. var.
	>exit //from root

 5) paths:
starting with / - absolute paths
/home/perser/Documets - standart Documents folder for user named perser
not starting with / - relative paths
../  - parent dir

 6)Commands
echo - display:
	>echo $GARFIELD_HOME
prints the value of GARFIELD_HOME environment variable
	>export GARFIELD_HOME=/home/perser/Documents/GarfieldPP
	>export HEED_DATABASE=$GARFIELD_HOME/Heed/heed++/database
creates env. variables
	>source $file_name.sh
runs .sh file. Works when simple file_name.sh is denied access.
use this command to initialize root env. vars. (thisroot.sh)
https://superuser.com/questions/46139/what-does-source-do
	>cp $from_file $to_file
copy
	>ls
list directories
	>rmdir
removes dir
	>apt-get target install $package_name
loads and installs package
	>./CellTest
executes CellTest program (in the same directory)
	>command && (command1 ; command2) || (command3)
executes command. If it exists with error code (returns not 0) command3 executed otherwise command1 and 2 are consecuvely
executed. If any fails 3 executed.
example:>make && (echo -e "make ok\n"; .Cell)|| (echo -e "make error\n")
-e flag enables special characters
; allows several commands in one line

 7) Regarding garfield++

Compile via make. not CMake - fails to find ROOT openGL related library.
see GarfieldPP_readme.txt